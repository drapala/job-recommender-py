version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_app
    environment:
      FLASK_DEBUG: 1
      MYSQL_HOST: mysql
      MYSQL_USER: dev_user
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_PASSWORD: dev_password
      MYSQL_DB: job_db
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB: job_recommendations
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: job-recommendations
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - mongo
      - kafka
    command: >
      bash -c "
        ./wait-for-it.sh mysql:3306 -- ./wait-for-it.sh kafka:9092 -- 
        flask db upgrade && flask run --host=0.0.0.0
      "
    volumes:
      - .:/app

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: job_db
      MYSQL_USER: dev_user
      MYSQL_PASSWORD: dev_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    ports:
      - "8081:8081"
    depends_on:
      - mongo

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  mysql_data:
  mongo_data:
